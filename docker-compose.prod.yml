version: '3.8'

services:
  # Banco de dados MySQL
  mysql:
    image: mysql:8.0
    container_name: saas-agendapro-mysql-prod
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_prod_data:/var/lib/mysql
    networks:
      - saas-network
    restart: always
    command: --default-authentication-plugin=mysql_native_password

  # Servidor Node.js
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.prod
    container_name: saas-agendapro-server-prod
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${MYSQL_DATABASE}
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "5000:5000"
    volumes:
      - ./server/uploads:/app/uploads
    depends_on:
      - mysql
    networks:
      - saas-network
    restart: always

  # Cliente React (Build de produção)
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    container_name: saas-agendapro-client-prod
    ports:
      - "3000:80"
    depends_on:
      - server
    networks:
      - saas-network
    restart: always

  # Nginx (Proxy reverso)
  nginx:
    image: nginx:alpine
    container_name: saas-agendapro-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/saas-agendapro.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - server
      - client
    networks:
      - saas-network
    restart: always

volumes:
  mysql_prod_data:
    driver: local

networks:
  saas-network:
    driver: bridge
