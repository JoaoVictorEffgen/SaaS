version: '3.8'

services:
  # Banco de dados MySQL
  mysql:
    image: mysql:8.0
    container_name: saas-agendapro-mysql
    environment:
      MYSQL_ROOT_PASSWORD: Cecilia@2020
      MYSQL_DATABASE: SaaS_Novo
      MYSQL_USER: saas_user
      MYSQL_PASSWORD: saas_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./server/scripts:/docker-entrypoint-initdb.d
    networks:
      - saas-network
    restart: unless-stopped

  # Servidor Node.js
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: saas-agendapro-server
    environment:
      NODE_ENV: development
      PORT: 5000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: SaaS_Novo
      DB_USER: saas_user
      DB_PASSWORD: saas_password
    ports:
      - "5000:5000"
    volumes:
      - ./server:/app
      - /app/node_modules
      - ./server/uploads:/app/uploads
    depends_on:
      - mysql
    networks:
      - saas-network
    restart: unless-stopped

  # Cliente React
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: saas-agendapro-client
    environment:
      REACT_APP_API_URL: http://localhost:5000
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - saas-network
    restart: unless-stopped

  # Nginx (Proxy reverso)
  nginx:
    image: nginx:alpine
    container_name: saas-agendapro-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/saas-agendapro.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - server
      - client
    networks:
      - saas-network
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local

networks:
  saas-network:
    driver: bridge
